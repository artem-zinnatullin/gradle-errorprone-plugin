buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://jitpack.io"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.5"
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.10"
        classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.6"
    }
}
apply plugin: "com.gradle.plugin-publish"
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
    apply plugin: 'net.ltgt.errorprone'
    dependencies {
        errorprone 'com.google.errorprone:error_prone_core:2.0.21'
    }

    apply plugin: 'com.github.sherter.google-java-format'
    googleJavaFormat {
        toolVersion = '1.3'
    }
}

group 'net.ltgt.gradle'

sourceCompatibility = targetCompatibility = 1.7

if (JavaVersion.current().isJava9Compatible()) {
    tasks.withType(JavaCompile).all { options.compilerArgs.addAll(['-release', '7']) }
    tasks.withType(GroovyCompile).all { options.compilerArgs.addAll(['-release', '7']) }
}
gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(publishPlugins)) {
        assert JavaVersion.current().isJava7() || JavaVersion.current().isJava9Compatible() : "Releases must be built with JDK 7 or JDK 9 (make sure to clean and rebuild after changing JDK)"

        assert 'git diff --quiet --exit-code'.execute(null, rootDir).waitFor() == 0 : "Working tree is dirty"
        def process ='git describe --exact-match'.execute(null, rootDir)
        assert process.waitFor() == 0 : "Version is not tagged"
        version = process.text.trim() - ~'^v'
    }
}

repositories {
    jcenter()
}
dependencies {
    testCompile localGroovy()
    testCompile 'com.netflix.nebula:nebula-test:4.0.0'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    inputs.file tasks.jar
    inputs.property "test.gradle-versions", project.findProperty("test.gradle-versions")

    systemProperty("plugin", tasks.jar.archivePath)
    if (project.hasProperty("test.gradle-versions")) {
        systemProperty("test.gradle-versions", project.property("test.gradle-versions"))
    }

    testLogging {
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'FULL'
    }
}

gradlePlugin {
    plugins {
        errorpronePlugin {
            id = 'net.ltgt.errorprone'
            implementationClass = 'net.ltgt.gradle.errorprone.ErrorPronePlugin'
        }
        errorproneBasePlugin {
            id = 'net.ltgt.errorprone-base'
            implementationClass = 'net.ltgt.gradle.errorprone.ErrorProneBasePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    vcsUrl = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    description = 'Gradle plugin to use the error-prone compiler for Java'
    tags = [ 'javac', 'error-prone' ]

    plugins {
        errorpronePlugin {
            id = 'net.ltgt.errorprone'
            displayName = 'Gradle error-prone plugin'
        }
        errorproneBasePlugin {
            id = 'net.ltgt.errorprone-base'
            displayName = 'Gradle error-prone base plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}
